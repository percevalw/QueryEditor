{"version":3,"sources":["index-compiled.js","index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","templates","name","json","$and","StateMachine","initial","transitions","antlr4","require","GrammarLexer","GrammarParser","util","ErrorListener","ParserErrorListener","call","partialLastToken","errors","prototype","Object","create","constructor","syntaxError","recognizer","offendingSymbol","line","column","msg","e","push","arguments","expected_tokens","_errHandler","getExpectedTokens","expected_string","toString","literalNames","symbolicNames","console","log","typeAssistTokens","parser","_ctx","tokens","getTokenStream","t","getCurrentToken","getTokenErrorDisplay","length","lastToken","text","INSTANCE","LexerErrorListener","start","_tokenStartCharIndex","stop","_input","index","getText","input","Date","chars","InputStream","lexer","CommonTokenStream","removeErrorListeners","addErrorListener","buildParseTrees","tree","query","children","toStringTree","ruleNames"],"mappings":"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","file":"all.js","sourcesContent":["\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Created by perceval on 03/12/2016.\n */\n\nvar templates = {\n    \"test\": {\n        name: \"Test\"\n    },\n    \"essai\": {\n        name: \"Test\"\n    }\n};\n\nvar json = {\n    $and: [{\n        \"test\": 1,\n        \"essai\": 2\n    }]\n};\n\nvar StateMachine = function StateMachine(initial, transitions) {\n    _classCallCheck(this, StateMachine);\n\n    this.initial = initial;\n};\n\n//# sourceMappingURL=index-compiled.js.map","var antlr4 = require('antlr4/index');\nvar GrammarLexer = require('../gen/GrammarLexer');\nvar GrammarParser = require('../gen/GrammarParser');\nvar util = require('util');\n\nvar ErrorListener = require('antlr4/error/ErrorListener').ErrorListener;\nfunction ParserErrorListener() {\n    ErrorListener.call(this);\n    this.partialLastToken = null;\n    this.errors = [];\n    return this;\n}\n\nParserErrorListener.prototype = Object.create(ErrorListener.prototype);\nParserErrorListener.prototype.constructor = ParserErrorListener;\n\nParserErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    this.errors.push(arguments);\n\n    var expected_tokens = recognizer._errHandler.getExpectedTokens(recognizer);\n    var expected_string = expected_tokens.toString(recognizer.literalNames, recognizer.symbolicNames);\n\n    console.log(\"EXPECTED\", expected_string);\n\n    this.partialLastToken = null;\n    var typeAssistTokens = [\"Fruits\", \"Count\"];\n    var parser = recognizer._ctx.parser,\n        tokens = parser.getTokenStream().tokens;\n\n    var t = recognizer.getCurrentToken();\n    console.log(\"currentToken\", t);\n    console.log(\"tokenErrorDisplay\", recognizer.getTokenErrorDisplay(t))\n\n    // last token is always \"fake\" EOF token\n    if (tokens.length > 1) {\n        var lastToken = tokens[tokens.length - 2];\n\n        if (true){//typeAssistTokens.indexOf(expected_string) >= 0) {\n            this.partialLastToken = lastToken.text;\n            console.log(\"PARTIAL\", this.partialLastToken);\n        }\n    }\n};\n\nParserErrorListener.INSTANCE = new ParserErrorListener();\n\nfunction LexerErrorListener() {\n    ErrorListener.call(this);\n    this.partialLastToken = null;\n    this.errors = [];\n    return this;\n}\n\nLexerErrorListener.prototype = Object.create(ErrorListener.prototype);\nLexerErrorListener.prototype.constructor = LexerErrorListener;\n\nLexerErrorListener.prototype.syntaxError = function(recognizer, offendingSymbol, line, column, msg, e) {\n    this.errors.push(arguments);\n\n    var start = recognizer._tokenStartCharIndex;\n    var stop = recognizer._input.index;\n    var text = recognizer._input.getText(start, stop);\n    console.log(\"LEXER\", text);\n};\n\nLexerErrorListener.INSTANCE = new LexerErrorListener();\n\nvar input = 'trades IN \"test\",5';\nconsole.log(new Date());\nconsole.log(\"INPUT : '\" + input + \"'\");\nconsole.log(\"=============================\")\nvar chars = new antlr4.InputStream(input);\nvar lexer = new GrammarLexer.GrammarLexer(chars);\nvar tokens  = new antlr4.CommonTokenStream(lexer);\nvar parser = new GrammarParser.GrammarParser(tokens);\nparser.removeErrorListeners();\nparser.addErrorListener(ParserErrorListener.INSTANCE);\nlexer.removeErrorListeners();\nlexer.addErrorListener(LexerErrorListener.INSTANCE);\n\n\nparser.buildParseTrees = true;\nvar tree = parser.query();\n//console.log(\"Parsed: \"+ util.inspect(tree));\nvar children = tree.toStringTree(parser.ruleNames);\nconsole.log(children);"]}